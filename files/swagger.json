{
    "swagger": "2.0",
    "info": {
        "description": "This is a rest api case without using a framework. (includes mux, router etc)",
        "title": "Go Restfull api",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "go-restfull-api.herokuapp.com",
    "paths": {
        "/api/v1/in-memory": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "in-memory"
                ],
                "summary": "get data",
                "parameters": [
                    {
                        "type": "string",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.InMemoryRecordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ApiError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "in-memory"
                ],
                "summary": "create data",
                "parameters": [
                    {
                        "description": "Creating data request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InMemoryCreateRecordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.InMemoryRecordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ApiError"
                        }
                    }
                }
            }
        },
        "/api/v1/mongo": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mongo"
                ],
                "summary": "fetch data from mongodb",
                "parameters": [
                    {
                        "description": "Filter for the request",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MongoGetRecordsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MongoRecordsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        },
        "dto.MongoGetRecordsRequest": {
            "type": "object",
            "required": [
                "endDate",
                "maxCount",
                "minCount",
                "startDate"
            ],
            "properties": {
                "endDate": {
                    "type": "string",
                    "example": "2021-01-02"
                },
                "maxCount": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 3000
                },
                "minCount": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 2800
                },
                "startDate": {
                    "type": "string",
                    "example": "2016-10-02"
                }
            }
        },
        "dto.MongoRecordResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "dto.MongoRecordsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MongoRecordResponse"
                    }
                }
            }
        },
        "models.InMemoryCreateRecordRequest": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.InMemoryGetRecordRequest": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "models.InMemoryRecordResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}